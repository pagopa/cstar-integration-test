# Run Automated Test in UAT environment

trigger: none

pool:
  vmImage: ubuntu-22.04

parameters:
  - name: 'SCRIPT'
    displayName: 'Script name'
    type: string
    values:
      - putTokenMockedPdv
      - putTokenPdv
      - idpayOnboardingAPI
      - ioPutEnrollInstrumentIssuer
      - ioPutEnrollIban
  - name: 'TARGET_ENV'
    displayName: 'Target Environment'
    type: string
    default: 'uat'
    values:
      - 'dev'
      - 'uat'
  - name: 'SCENARIO_TYPE_ENV'
    displayName: 'Scenario type'
    type: string
    default: 'rampingArrivalRate'
    values:
      - 'rampingArrivalRate'
      - 'perVuIterations'
  - name: 'VIRTUAL_USERS_ENV'
    displayName: 'Number of virtual users (1 - 100 000)'
    type: number
  - name: 'STAGE_NUMBER_ENV'
    displayName: 'Number of ramping stages (min: 3)'
    type: number
    default: 3
  - name: 'DURATION_PER_VU_ITERATION'
    displayName: 'Maximum duration in seconds for the perVuIterations-type scenario'
    type: number
    default: 600
  - name: 'APIM_SK'
    displayName: 'API-Key (NOT required for putTokenMockedPdv script)'
    type: string
    default: 'IGNORE_IF_putTokenMockedPdv'
  - name: 'SERVICE_ID'
    displayName: 'ServiceId (required for idpayOnboardingAPI script)'
    type: string
    default: 'IGNORE_IF_NOT_idpayOnboardingAPI'
  - name: 'INITIATIVE_ID'
    displayName: 'InitiativeId (required for ioPutEnrollInstrumentIssuer and ioPutEnrollIban script)'
    type: string
    default: 'IGNORE_IF_NOT_ioPutEnrollInstrumentIssuer_and_ioPutEnrollIban'

steps:
  - task: DownloadSecureFile@1
    name: fc_pgpans
    displayName: 'Fiscal Code/PgPan File'
    inputs:
      secureFile: 'fc_pgpans.csv'
  - task: DownloadSecureFile@1
    name: fc_iban
    displayName: 'Fiscal Code/IBAN File'
    inputs:
      secureFile: 'fc_iban.csv'
  - task: DownloadSecureFile@1
    name: CSTAR.IDPAY.TRNLOG.20230313.223000.001.01
    displayName: 'Transactions File'
    inputs:
      secureFile: 'CSTAR.IDPAY.TRNLOG.20230313.223000.001.01.csv.pgp'
  - task: DownloadSecureFile@1
    name: rtd-uat-acquirer-mauth-pem
    displayName: 'RTD Certification File'
    inputs:
      secureFile: 'rtd-uat-acquirer-mauth.pem'
  - task: DownloadSecureFile@1
    name: rtd-uat-acquirer-mauth-key
    displayName: 'RTD Key File'
    inputs:
      secureFile: 'rtd-uat-acquirer-mauth.key'
  - script: |
      cp /home/vsts/work/_temp/fc_pgpans.csv $(pwd)/assets/fc_pgpans.csv
    displayName: Copy FiscalCode/PgPan File
  - script: |
      cp /home/vsts/work/_temp/fc_iban.csv $(pwd)/assets/fc_iban.csv
    displayName: Copy FiscalCode/IBAN File
  - script: |
      cp /home/vsts/work/_temp/CSTAR.IDPAY.TRNLOG.20230313.223000.001.01.csv.pgp $(pwd)/assets/CSTAR.IDPAY.TRNLOG.20230313.223000.001.01.csv.pgp
    displayName: Copy Transaction File
  - script: |
      mkdir $(pwd)/certs
  - script: |
      cp /home/vsts/work/_temp/rtd-uat-acquirer-mauth.pem $(pwd)/certs/rtd-uat-acquirer-mauth.pem
    displayName: Copy RTD PEM File
  - script: |
      cp /home/vsts/work/_temp/rtd-uat-acquirer-mauth.key $(pwd)/certs/rtd-uat-acquirer-mauth.key
    displayName: Copy RTD Key File
  - script: |
       docker pull grafana/k6:latest
    displayName: Pull k6 image
  - script: |
      docker run -i \
        --name ksixtests \
        --user $UID \
        -v $(pwd):/app \
        --workdir "/app" \
        -e TARGET_ENV=${{ parameters.TARGET_ENV }} \
        -e SCENARIO_TYPE_ENV=${{ parameters.SCENARIO_TYPE_ENV }} \
        -e VIRTUAL_USERS_ENV=${{ parameters.VIRTUAL_USERS_ENV }} \
        -e STAGE_NUMBER_ENV=${{ parameters.STAGE_NUMBER_ENV }} \
        -e DURATION_PER_VU_ITERATION=${{ parameters.DURATION_PER_VU_ITERATION }} \
        -e APIM_SK=${{ parameters.APIM_SK }} \
        -e SERVICE_ID=${{ parameters.SERVICE_ID }} \
        -e INITIATIVE_ID=${{ parameters.INITIATIVE_ID }} \
        grafana/k6:latest \
        run /app/test/performance/${{ parameters.SCRIPT }}.js
    displayName: Run k6 ${{ parameters.SCRIPT }}
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/performancetest-result.xml'
      searchFolder: '$(System.DefaultWorkingDirectory)'
      failTaskOnFailedTests: true

