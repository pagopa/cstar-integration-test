# Run Automated Test in UAT environment

trigger: none

pool:
  vmImage: ubuntu-22.04

parameters:
  - name: 'SCRIPT'
    displayName: 'Script name'
    type: string
    values:
      - putTokenMockedPdv
      - putTokenPdv
  - name: 'TARGET_ENV'
    displayName: 'Target Environment'
    type: string
    default: 'uat'
    values:
      - 'dev'
      - 'uat'
  - name: 'SCENARIO_TYPE_ENV'
    displayName: 'Scenario type'
    type: string
    default: 'rampingArrivalRate'
    values:
      - 'rampingArrivalRate'
      - 'perVuIterations'
  - name: 'VIRTUAL_USERS_ENV'
    displayName: 'Number of virtual users (1 - 100 000)'
    type: number
  - name: 'STAGE_NUMBER_ENV'
    displayName: 'Number of ramping stages (min: 3)'
    type: number
    default: 3
  - name: 'DURATION_PER_VU_ITERATION'
    displayName: 'Maximum duration in seconds for the perVuIterations-type scenario'
    type: number
    default: 600
  - name: 'PDV_APIM_SK_ENV'
    displayName: 'PDV API-Key (required for putTokenPdv script)'
    type: string
    default: 'IGNORE_IF_putTokenMockedPdv'
  - name: 'TRX_FOR_VU'
    displayName: 'Number of transaction for VUs'
    type: number
    default: 1
  - name: 'RTD_API_KEY'
    displayName: 'RTD API-Key'
    type: string
    default: 'IGNORE_IF_NOT_NECESSARY'

steps:
  - task: DownloadSecureFile@1
    name: rtd_cert_pem
    displayName: 'Download MAUTH pem'
    inputs:
      secureFile: 'rtd-uat-acquirer-mauth.pem'
  - task: DownloadSecureFile@1
    name: rtd_cert_key
    displayName: 'Download MAUTH key'
    inputs:
      secureFile: 'rtd-uat-acquirer-mauth.key'
  - task: DownloadSecureFile@1
    name: bpd_pm_test
    displayName: 'Download BPD PM public uat'
    inputs:
      secureFile: 'Centrostella-BPD-PM-TEST_0xE7D22349_public_uat.asc'
  - script: |
      echo $(pwd)
      echo $(rtd_cert_pem.secureFilePath)
      echo $(rtd_cert_key.secureFilePath)
      echo $(bpd_pm_test.secureFilePath)
  - script: |
      apt-get -y update && apt-get -y upgrade
      apt install -y python3-pip
      curl -sSL https://install.python-poetry.org | python3 -
      curl -L https://github.com/pagopa/cstar-cli/archive/refs/heads/main.zip -o cstar-cli.zip
      unzip cstar-cli.zip
      ls -lrt
      cd cstar-cli-main
      pip install --force-reinstall src/cstar-cli-core
      pip install --no-deps --force-reinstall src/cstar-cli
    displayName: Set environment
  #TODO set date time parameters
  - script: |
      cd cstar-cli-main/src/cstar-cli
      python3 cst idpay idpaydataset --action dataset_and_transactions --env ${{ parameters.TARGET_ENV }} --api-key ${{ parameters.RTD_API_KEY }} --key $(rtd_cert_key.secureFilePath) --cert $(rtd_cert_pem.secureFilePath) --PM-pubk $(bpd_pm_test.secureFilePath) --out-dir ./generated --num-fc ${{ parameters.VIRTUAL_USERS_ENV }} --trx-per-fc 1 --start-datetime 2023-02-06T20:30:00.000Z --mcc 1234 --PM-salt SALT123
      ls -lrt
      cd ../../../
    displayName: Retrieve resource from cstar-cli
  - script: |
       docker pull grafana/k6:latest
    displayName: Pull k6 image
  - script: |
      docker run -i \
        --name ksixtests \
        --user $UID \
        -v $(pwd):/app \
        --workdir "/app" \
        -e TARGET_ENV=${{ parameters.TARGET_ENV }} \
        -e SCENARIO_TYPE_ENV=${{ parameters.SCENARIO_TYPE_ENV }} \
        -e VIRTUAL_USERS_ENV=${{ parameters.VIRTUAL_USERS_ENV }} \
        -e STAGE_NUMBER_ENV=${{ parameters.STAGE_NUMBER_ENV }} \
        -e DURATION_PER_VU_ITERATION=${{ parameters.DURATION_PER_VU_ITERATION }} \
        -e PDV_APIM_SK_ENV=${{ parameters.PDV_APIM_SK_ENV }} \
        grafana/k6:latest \
        run /app/test/performance/${{ parameters.SCRIPT }}.js
    displayName: Run k6 ${{ parameters.SCRIPT }}
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/performancetest-result.xml'
      searchFolder: '$(System.DefaultWorkingDirectory)'
      failTaskOnFailedTests: true

